name: Deploy

on:
  push:
    tags: [ 'v*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build project
      run: npm run build
    
    - name: Get tag message
      if: startsWith(github.ref, 'refs/tags/')
      id: tag_message
      run: |
        # Debug: Show what we're getting
        echo "Getting tag message for: ${{ github.ref_name }}"
        echo "Git show output:"
        git show --format='%B' --no-patch refs/tags/${{ github.ref_name }} || echo "git show failed"
        
        # Get the tag message using git show with proper format
        # Filter out Git metadata lines (tag name, tagger info) and empty lines
        TAG_MESSAGE=$(git show --format='%B' --no-patch refs/tags/${{ github.ref_name }} 2>/dev/null | \
          grep -v "^tag " | \
          grep -v "^Tagger:" | \
          grep -v "^$" | \
          sed '/^$/d' || echo "")
        
        echo "Extracted message length: ${#TAG_MESSAGE}"
        
        # Create release message according to project rules
        if [ -z "$TAG_MESSAGE" ]; then
          TAG_MESSAGE="Release ${{ github.ref_name }}"
        else
          # Format the message according to release template
          cat > /tmp/release_message.txt <<'RELEASE_EOF'
        ## ðŸš€ Release ${{ github.ref_name }}
        
        RELEASE_EOF
          echo "$TAG_MESSAGE" >> /tmp/release_message.txt
          cat >> /tmp/release_message.txt <<'RELEASE_EOF'
        
        ## ðŸ“¦ Build Artifacts
        - `dist/rater.js` - Loader script (unminified)
        - `dist/rater-core.js` - Main application bundle (minified)
        
        ## ðŸ“¥ Installation
        Install the userscript by copying the contents of `dist/rater.js` into your userscript manager.
        RELEASE_EOF
          TAG_MESSAGE=$(cat /tmp/release_message.txt)
        fi
        
        echo "Final message: $TAG_MESSAGE"
        
        echo "tag_message<<EOF" >> $GITHUB_OUTPUT
        echo "$TAG_MESSAGE" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: ${{ steps.tag_message.outputs.tag_message || format('Release {0}', github.ref_name) }}
        files: |
          dist/rater.js
          dist/rater-core.js